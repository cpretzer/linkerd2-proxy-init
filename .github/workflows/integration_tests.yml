name: Integration tests
on:
  pull_request: {}
  push:
    paths-ignore:
    - '*.md'
    - '**/*.md'
    branches:
    - master
jobs:
  kind_integration_tests:
    name: KinD integration tests
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup KinD
      uses: engineerd/setup-kind@v0.4.0
      with:
        version: v0.8.1
    - name: Docker build
      run: |
        docker build -t gcr.io/linkerd-io/proxy-init:latest .
        docker build -t buoyantio/iptables-tester:v1 -f integration_test/iptables/Dockerfile-tester ./integration_test
    - name: Load image into the local KinD cluster
      run: |
        kind load docker-image gcr.io/linkerd-io/proxy-init:latest
        kind load docker-image buoyantio/iptables-tester:v1
    - name: Run integration tests
      run: |
        cd integration_test
        ./run_tests.sh
  arm64_integration_tests:
    name: ARM64 integration tests
    runs-on: ubuntu-18.04
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Run integration tests with k3s cluster using QEMU
      uses: uraimo/run-on-arch-action@v1.0.9
      with:
        architecture: aarch64
        distribution: ubuntu18.04
        run: |
          # Install kubectl
          apt-get update && apt-get install -y apt-transport-https gnupg2 curl
          curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
          echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | tee -a /etc/apt/sources.list.d/kubernetes.list
          apt-get update && apt-get install -y kubectl

          # Install Docker
          # curl -fsSL https://get.docker.com | sh

          # Install k3d
          curl -s https://raw.githubusercontent.com/rancher/k3d/master/install.sh | bash

          # Build docker images
          docker build -t gcr.io/linkerd-io/proxy-init:latest .
          docker build -t buoyantio/iptables-tester:v1 -f integration_test/iptables/Dockerfile-tester ./integration_test

          # Create a cluster
          k3d create cluster k3s-proxy-init
          kubectl get pods --all-namespaces

          # Run the tests
          cd integration_test
          ./run_tests.sh
